import { createSlice } from '@reduxjs/toolkit';

// Define the initial state for the shopping cart
const initialState = {
  items: localStorage.getItem("cartItems") ? JSON.parse(localStorage.getItem("cartItems")) : [],
  cartTotalAmount: 0,
  cartTotalQuantity: 0
};

// Create a slice for the shopping cart
const cartSlice = createSlice({
  name: 'cart',
  initialState,
  reducers: {
    // Add item to the cart
    addItem(state, action) {
    const newItem = action.payload;
    console.log(newItem);
    const existingItem = state.items.find(item => item.id === newItem.id);
    console.log(existingItem);

  if (existingItem) {
    // If item already exists, update its quantity
    existingItem.quantity += newItem.quantity;
    console.log("added qty")
  } else {
    // If item doesn't exist, add it to the cart
    state.items.push(newItem);
  }
  localStorage.setItem("cartItems", JSON.stringify(state.items));
},
    // Remove item from the cart
    removeItem(state, action) {
      state.items = state.items.filter(item => item.id !== action.payload.id);
    },
    // Update quantity of an item in the cart
    updateQuantity(state, action) {
      const { id, quantity } = action.payload;
      const itemToUpdate = state.items.find(item => item.id === id);
      if (itemToUpdate) {
        itemToUpdate.quantity = quantity;
      }
    },
    getTotals(state, action) {
      let {total , cartQuantity} = state.items.reduce(
        (cartTotal, cartItems) => {
          const {price, quantity} = cartItems
      
          const itemTotal = price * quantity
        
          cartTotal.total += itemTotal;
          cartTotal.cartQuantity += quantity;
  
          return cartTotal
        },
        {
          total: 0,
          cartQuantity: 0,
        }
      )
      console.log(cartQuantity);
      state.cartTotalQuantity = cartQuantity
      state.cartTotalAmount = total
    },
    // Clear the entire cart
    clearCart(state) {
      state.items = [];
    },
  },
});

// Export actions generated by the slice
export const { addItem, removeItem, updateQuantity, clearCart, getTotals } = cartSlice.actions;

// Export the reducer function
export default cartSlice.reducer;